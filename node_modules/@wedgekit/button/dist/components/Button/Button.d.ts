import React from 'react';
import { Domain, Variant } from './buttonThemes';
declare type InternalProps = {
    /**
     * The string label for the button. The label should be descriptive and readable. If there are elements that
     * would not sound good to a screen reader, pass in an aria-label (e.g. "Add +" would read "Add plus" to a
     * screen reader. Instead, set `aria-label="Add"`.
     */
    children?: JSX.Element | string;
    /**
     * A string denoting the domain the Button is used for.
     *
     * @default 'default'
     */
    domain?: Domain;
    /**
     * Set the button to fill the full-width of its parent container.
     */
    fullWidth?: boolean;
    /**
     * Optional prop to display an icon positioned left of the text.
     */
    icon?: string;
    /**
     * Displayed in a tooltip if enabled, required on all components
     */
    label?: string;
    /**
     * Is the button in a submitting state and should display a spinner.
     */
    submitting?: boolean;
    /**
     * A string denoting the variant the Button is used for.
     *
     * @default 'neutral'
     */
    variant?: Variant;
};
declare const Button: React.ForwardRefExoticComponent<Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, keyof InternalProps> & InternalProps & React.RefAttributes<HTMLButtonElement>>;
export default Button;
export declare type ButtonProps = React.ComponentProps<typeof Button>;
