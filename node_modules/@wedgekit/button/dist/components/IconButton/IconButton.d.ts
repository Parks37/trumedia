import React from 'react';
import { ColorTag } from '@wedgekit/color';
import { IconTag } from '@wedgekit/icons';
import { Domain, Variant } from '../Button/buttonThemes';
declare type InternalProps = {
    /**
     * Optional prop for styling purposes
     */
    className?: string;
    /**
     * A string denoting the domain the IconButton is used for.
     *
     * @default 'default'
     */
    domain?: Domain;
    /**
     * Icon string determines which icon to be displayed
     */
    icon: IconTag;
    /**
     * Icon string determines icon color
     * @default 'N600'
     */
    iconColor?: ColorTag;
    /**
     * Optional prop for rendering inline. (24x24 rather than 40x40)
     */
    inline?: boolean;
    /**
     * Displayed in a tooltip if enabled, required on all components
     */
    label: string;
    /**
     * Optional prop for styling purposes
     */
    noFill?: boolean;
    onClick?: (e: React.SyntheticEvent) => void;
    /**
     * Optional prop for styling purposes
     */
    outline?: boolean;
    /**
     * A string denoting the variant the IconButton is used for.
     *
     * @default 'neutral'
     */
    /**
     * If a submitting indicator should be displayed
     */
    submitting?: boolean;
    variant?: Variant;
};
declare const IconButton: React.ForwardRefExoticComponent<Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, keyof InternalProps> & InternalProps & React.RefAttributes<HTMLButtonElement>>;
export default IconButton;
export declare type IconButtonProps = React.ComponentProps<typeof IconButton>;
