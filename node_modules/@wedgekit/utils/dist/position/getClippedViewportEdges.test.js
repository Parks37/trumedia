import i from"ava";import{JSDOM as r}from"jsdom";import o from"./getClippedViewportEdges";i.beforeEach(()=>{const t=new r;global.document=t.window.document,global.window=t.window}),i("getClippedViewportEdges: should return empty array for an element with no clipping",t=>{const e={bottom:0,height:100,left:0,right:100,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),[])}),i("getClippedViewportEdges: should return array indicating clipping at the top edge",t=>{const e={bottom:0,height:100,left:0,right:100,top:-100,width:100};t.deepEqual(o.checkViewPortEdge(e),["top"])}),i("getClippedViewportEdges: should return array indicating clipping at the bottom edge",t=>{const e={bottom:2e3,height:100,left:0,right:100,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),["bottom"])}),i("getClippedViewportEdges: should return array indicating clipping at the left edge",t=>{const e={bottom:0,height:100,left:-100,right:100,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),["left"])}),i("getClippedViewportEdges: should return array indicating clipping at the right edge",t=>{const e={bottom:0,height:100,left:0,right:5e3,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),["right"])}),i("getClippedViewportEdges: should return array indicating clipping at the top and bottom edges",t=>{const e={bottom:0,height:100,left:0,right:5e3,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),["right"])}),i("getClippedViewportEdges: should return array indicating clipping at the left and right edges",t=>{const e={bottom:0,height:100,left:0,right:5e3,top:0,width:100};t.deepEqual(o.checkViewPortEdge(e),["right"])});
