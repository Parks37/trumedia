import React from 'react';
import { InputProps } from '../Input';
declare type InnerProps = {
    /**
     * Additional CSS classes for the `<textarea>` element.
     */
    className?: string;
    /**
     * Optional prop, to specify stylings.
     */
    disabled?: boolean;
    /**
     * Optional element id. If not specified a value will be generated.
     */
    id?: string;
    /**
     * Information to populate the info tooltip.
     */
    info?: {
        title: string;
        content?: string;
        link?: {
            url: string;
            label: string;
        };
    };
    /**
     * No longer supported. Instead pass 'status'="error". To be removed in v3.0.0
     */
    invalid?: boolean;
    /**
     * Unique text that clearly identifies the purpose and use of the textarea.
     */
    label: string;
    /**
     * Whether or not to visibly display the label. Label will always
     * be available to users of screen readers via aria-label.
     */
    labelHidden?: boolean;
    /**
     * Indicates whether the input's label will display inline with it to its left
     */
    labelInline?: boolean;
    /**
     * Used to determine the max-height of the text area. Only valid when useAutosize is false.
     * This defaults to 40vh.
     */
    maxHeight?: string;
    /**
     * Used to determine the min-height of the text area. Only valid when useAutosize is false.
     * This defaults to 88px (3 rows).
     */
    minHeight?: string;
    /**
     * Default placeholding text.
     */
    placeholder?: string;
    /**
     * Indicated read only state for styling.
     */
    readOnly?: boolean;
    /**
     * Indicates whether or not the textarea is required.
     */
    required?: boolean;
    /**
     * Indicates whether or not the textarea can be resized. Applicable only when useAutosize is
     * set to false and defaults to 'both'. Valid values are 'horizontal', 'vertical', 'both', or 'none'.
     */
    resize?: string;
    /**
     * Indicates the validation status.
     */
    status?: 'default' | 'error' | 'success' | 'pending';
    /**
     * Property used if you want to break accessibility.
     */
    tabIndex?: number;
    /**
     * Identifies whether or not the Autosize functionality is active.
     */
    useAutosize?: boolean;
    /**
     * Value is a value that allows the state of the textarea to be controlled
     * externally.
     */
    value: string;
    /**
     * Called when the user exits the textarea field.
     */
    onBlur?: (event: React.SyntheticEvent<Element, Event>) => void;
    /**
     * Called every time the user changes the textarea value. Should be used to respond to individual
     * keystrokes; in many cases onSubmit is preferable.
     */
    onChange: (value: string, event: React.SyntheticEvent<HTMLTextAreaElement>) => void;
    /**
     * Called when the user enters the textarea field.
     */
    onKeyDown?: (event: React.SyntheticEvent<Element, Event>) => void;
};
declare const _default: React.ForwardRefExoticComponent<Omit<InputProps, "renderIcon"> & Omit<React.TextareaHTMLAttributes<HTMLTextAreaElement>, keyof InnerProps> & InnerProps & React.RefAttributes<HTMLTextAreaElement>>;
export default _default;
