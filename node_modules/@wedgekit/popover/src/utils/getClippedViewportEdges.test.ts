/* global global */

import test from 'ava';

import { JSDOM } from 'jsdom';

import getClippedViewportEdges from './getClippedViewportEdges';

test.beforeEach(() => {
  const jsdom = new JSDOM();
  global.document = jsdom.window.document;
  global.window = (jsdom.window as unknown) as Window & typeof globalThis;
});

test('getClippedViewportEdges: should return empty object for an element with no clipping', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: 0,
    right: 100,
    top: 0,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), {});
});

test('getClippedViewportEdges: should return object indicating clipping at the top edge', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: 0,
    right: 100,
    top: -100,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { top: -100 });
});

test('getClippedViewportEdges: should return object indicating clipping at the bottom edge', (t) => {
  const rect = {
    bottom: 2000,
    height: 100,
    left: 0,
    right: 100,
    top: 0,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { bottom: -1232 });
});

test('getClippedViewportEdges: should return object indicating clipping at the left edge', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: -100,
    right: 100,
    top: 0,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { left: -100 });
});

test('getClippedViewportEdges: should return object indicating clipping at the right edge', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: 0,
    right: 5000,
    top: 0,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { right: -3976 });
});

test('getClippedViewportEdges: should return object indicating clipping at the top and bottom edges', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: 0,
    right: 5000,
    top: -24,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { top: -24, right: -3976 });
});

test('getClippedViewportEdges: should return object indicating clipping at the left and right edges', (t) => {
  const rect = {
    bottom: 0,
    height: 100,
    left: 0,
    right: 5000,
    top: 0,
    width: 100,
  };

  t.deepEqual(getClippedViewportEdges(rect), { right: -3976 });
});
