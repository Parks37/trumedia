import React from 'react';

import Icon, { IconWidth } from '@wedgekit/icons';
import Layout from '@wedgekit/layout';

import type { ColorPalette } from '@wedgekit/color';
import type { IconTag } from '@wedgekit/icons';

import { Bar, CloseWrapper, IconWrapper, Text, Title, TitleContainer, Wrapper } from './styled';

type Props = {
  className?: string;
  crust?: boolean;
  domainColors?: Partial<{
    bg: keyof ColorPalette;
    crust: keyof ColorPalette;
    icon: keyof ColorPalette;
  }>;
  extraHeaderContent?: React.ReactNode;
  header: string;
  icon?: IconTag;
  message?: string;
  remove: () => void;
};

const Toast = ({
  className,
  header,
  crust,
  icon,
  message,
  remove,
  domainColors,
  extraHeaderContent,
}: Props) => (
  <Wrapper
    className={className}
    areas={['bar icon header close', 'bar icon message close']}
    columns={['max-content', 'max-content', 1, 'max-content']}
    align="center"
  >
    {crust && <Bar area="bar" crust={domainColors?.crust} />}
    {icon && (
      <IconWrapper bg={domainColors?.bg ?? 'B100'} area="icon">
        <IconWidth iconWidth={16}>
          <Icon color={domainColors?.icon ?? 'B700'}>{icon}</Icon>
        </IconWidth>
      </IconWrapper>
    )}
    <Layout.Section area="header">
      {extraHeaderContent ? (
        <TitleContainer>
          <Title level={6}>{header}</Title>
          {extraHeaderContent}
        </TitleContainer>
      ) : (
        <Title level={6}>{header}</Title>
      )}
    </Layout.Section>
    {message && (
      <Layout.Section area="message">
        <Text>{message}</Text>
      </Layout.Section>
    )}
    <Layout.Section area="close">
      <CloseWrapper onClick={remove}>
        <IconWidth iconWidth={16}>
          <Icon>close</Icon>
        </IconWidth>
      </CloseWrapper>
    </Layout.Section>
  </Wrapper>
);

export default Toast;
