import React from 'react';
import { ColorTag } from '@wedgekit/color';
import { IconTag } from '@wedgekit/icons';
declare type LinkObject = {
    /**
     *  The href for the `<a>` element
     */
    url: string;
    /**
     *  The display text for the `<a>` element
     */
    label: string;
};
export declare type InfoObject = {
    /**
     *  Color for the background of the IconButton div
     *  @default 'N050'
     */
    background?: ColorTag;
    /**
     *  Further descriptive text, appears in the 'body' of the info dialog. If no `info.content` is provided, the info dialog will not have a 'body'. For styling purposes, `content` is a styled `<p>` tag.
     */
    content?: string;
    /**
     *  Used to select a @wedgekit/icon
     *  @default 'icon'
     */
    icon?: IconTag;
    /**
     *  Color for the 'fill' of the Icon svg
     *  @default 'N600'
     */
    iconColor?: ColorTag;
    link?: LinkObject;
    /**
     *  Descriptive text to give the user context, appears in the 'header' of the info dialog. For styling purposes, `title` is a styled `<h3>` tag.
     */
    title: string;
};
declare type Props = {
    info: InfoObject;
    popoverClassname?: string;
    tabIndex?: number;
    onClick?: (e: React.SyntheticEvent) => void;
    onExit?: (e?: Event | React.SyntheticEvent<MouseEvent | KeyboardEvent>) => void;
};
declare const InfoButton: ({ info, popoverClassname, tabIndex, onClick, onExit }: Props) => JSX.Element;
export default InfoButton;
