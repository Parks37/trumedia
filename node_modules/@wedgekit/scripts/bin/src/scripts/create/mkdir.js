import chalk from 'chalk';
import fs from 'fs/promises';
import path from 'path';
import messages from '@utils/messages';
import prettyCatch from '@utils/prettyCatch';
const mkdir = async (name) => {
    const testDir = async () => {
        const files = [];
        const directory = await fs.opendir(path.resolve(process.cwd(), name));
        // eslint-disable-next-line no-restricted-syntax
        for await (const dirent of directory) {
            files.push(dirent.name);
        }
        return files;
    };
    const [error, files] = (await prettyCatch(testDir));
    if (error) {
        if (error.code === 'ENOENT') {
            /**
             * If the directory does not already exist - then create it.
             */
            process.stdout.write(messages.text(`creating ${name} directory`));
            await fs.mkdir(path.resolve(process.cwd(), name));
        }
        else {
            /**
             * If a different error is returned, end the script.
             */
            process.stderr.end(messages.error(`package creation failed
        ${error.message}`));
        }
        /**
         *  If the directory already exists, then we look at the content of the directory. If it has something already
         *  in it, then we abort the script since we don't want to overwrite an existing application.
         */
    }
    else if (files?.length) {
        process.stderr.end(messages.error(`package creation failed - ${chalk.underline(name)} already exists and cannot be overwritten`));
        process.exit(1);
    }
};
export default mkdir;
