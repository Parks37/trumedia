import dotenv from 'dotenv';
import { readPackageUpSync } from 'read-pkg-up';
const { parsed } = dotenv.config();
const pkg = readPackageUpSync()?.packageJson;
const deps = ['ag-grid-community', 'focus-trap-react', 'react', 'react-dates', 'react-dom'];
const checkParsed = () => {
    if (parsed) {
        if (Object.keys(parsed).some((key) => !key.startsWith('WEDGEKIT'))) {
            console.warn(`Hi there, it looks like you are trying to include some environment variables, but they weren't prefixed with 'WEDGEKIT'.
          Only environment variables prefixed with 'WEDGEKIT' will be made available to the build.`);
        }
    }
};
const getDefined = () => {
    Object.keys(process.env).reduce((record, key) => {
        if (key.substring(0, 8) === 'WEDGEKIT') {
            return {
                ...record,
                [`process.env.${key}`]: JSON.stringify(process.env[key]),
            };
        }
        return record;
    }, {});
};
const getProxy = (opts) => {
    const proxies = {};
    if (opts['graphql-proxy']) {
        console.info(`Configuring graphql proxy with ${opts['graphql-proxy']}`);
        proxies['/graphql'] = { target: opts['graphql-proxy'], changeOrigin: true };
    }
    return proxies;
};
const getViteConfig = (opts) => {
    checkParsed();
    return {
        build: {
            commonjsOptions: {
                transformMixedEsModules: true,
            },
        },
        define: getDefined(),
        server: {
            fs: {
                allow: ['../..'],
            },
            proxy: getProxy(opts),
        },
        optimizeDeps: {
            include: deps.filter((dep) => Object.keys(pkg?.dependencies || {}).includes(dep)),
        },
        resolve: {
            dedupe: ['react', 'react-dom'],
            extensions: ['.ts', '.tsx', 'd.ts', '.mjs', '.js', '.jsx', '.json'],
        },
    };
};
export default getViteConfig;
