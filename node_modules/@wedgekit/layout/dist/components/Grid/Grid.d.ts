import React from 'react';
export declare type Props = {
    children: React.ReactNode;
    /**
     * A string of the className to be applied to the Grid component
     */
    className?: string;
    /**
     * A string used to find element for testing purposes
     */
    'data-cy'?: string;
    /**
     * An array of grid-template-areas with each entry corresponding to a row
     */
    areas: string[];
    /**
     * An array of grid-template-areas which display above 1200px
     */
    areasXl?: string[];
    /**
     * An array of grid-template-areas to display up to 1200px
     */
    areasLg?: string[];
    /**
     * An array of grid-template-areas up to 992px
     */
    areasMd?: string[];
    /**
     *  An array of grid-template-areas up to 768px
     */
    areasSm?: string[];
    /**
     * An array of grid-template-areas up to 576px
     */
    areasXs?: string[];
    /**
     * An array of grid-template-columns with each entry corresponding to a column.
     * Can accept a number (N) which as a column which will result in `minmax(0, Nfr)`.
     * If a string is provided the string will be directly applied with nothing added to it.
     */
    columns: (number | string)[];
    /**
     * An array of grid-template-columns which display above 1200px
     */
    columnsXl?: string[];
    /**
     * An array of grid-template-columns to display up to 1200px
     */
    columnsLg?: (number | string)[];
    /**
     * An array of grid-template-columns up to 992px
     */
    columnsMd?: (number | string)[];
    /**
     * An array of grid-template-columns up to 768px
     */
    columnsSm?: (number | string)[];
    /**
     * An array of grid-template-columns up to 576px
     */
    columnsXs?: string[];
    multiplier?: number;
    noGap?: boolean;
    /**
     * An array of grid-template-rows with each entry corresponding to a row
     */
    rows?: string[];
    /**
     * An array of grid-template-rows which display above 1200px
     */
    rowsXl?: string[];
    /**
     * An array of grid-template-rows to display up to 1200px
     */
    rowsLg?: string[];
    /**
     * An array of grid-template-rows up to 992px
     */
    rowsMd?: string[];
    /**
     * An array of grid-template-rows up to 768px
     */
    rowsSm?: string[];
    /**
     * An array of grid-template-rows up to 576px
     */
    rowsXs?: string[];
    justify?: string;
    justifyItems?: string;
    align?: string;
    place?: string;
};
/**
 * Grid provides a simple wrapper for making grid-based
 * layouts on a page. Grid uses css-grids under-the-hood,
 * which means that utilizing columns, rows, and areas will mirror
 * the grid-template-columns, grid-template-rows, and grid-template-areas
 * of css-grids.
 */
declare const Grid: {
    (props: Props): JSX.Element;
    defaultProps: {
        areasLg: null;
        areasMd: null;
        areasSm: null;
        columnsLg: null;
        columnsMd: null;
        columnsSm: null;
        rowsLg: null;
        rowsMd: null;
        rowsSm: null;
        justify: null;
        align: null;
    };
};
export default Grid;
